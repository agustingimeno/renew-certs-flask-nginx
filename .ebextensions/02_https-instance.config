# based on https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/https-singleinstance-python.html

packages:
  yum:
    mod24_ssl : []

files:
  /etc/httpd/conf.d/ssl.conf.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      LoadModule wsgi_module modules/mod_wsgi.so
      WSGIPythonHome /opt/python/run/baselinenv
      WSGISocketPrefix run/wsgi
      WSGIRestrictEmbedded On
      Listen 443
      <VirtualHost *:443>
        SSLEngine on
        SSLCertificateFile "/etc/letsencrypt/live/CERT_DOMAIN/fullchain.pem"
        SSLCertificateKeyFile "/etc/letsencrypt/live/CERT_DOMAIN/privkey.pem"
        SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
        SSLHonorCipherOrder on
        SSLCipherSuite ALL:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4

        Alias /static/ /opt/python/current/app/static/
        <Directory /opt/python/current/app/static>
        Order allow,deny
        Allow from all
        </Directory>
        
        WSGIScriptAlias / /opt/python/current/app/application.py
        
        <Directory /opt/python/current/app>
        Require all granted
        </Directory>
        
        WSGIDaemonProcess wsgi-ssl processes=1 threads=15 display-name=%{GROUP} \
          python-path=/opt/python/current/app \
          python-home=/opt/python/run/venv \
          home=/opt/python/current/app \
          user=wsgi \
          group=wsgi
        WSGIProcessGroup wsgi-ssl
        
      </VirtualHost>

container_commands:
  01configuressl:
    command: |
      # if we are confgured with a CERT_DOMAIN
      #  - put the ssl.conf into place
      #  - install certbot and route53 dns plugin
      #  - if the cert was created restart apache
      if [[ ! -z "${CERT_DOMAIN}" ]]
      then
          sed "s/CERT_DOMAIN/${CERT_DOMAIN}/g" /etc/httpd/conf.d/ssl.conf.pre > /etc/httpd/conf.d/ssl.conf
          pip install certbot_dns_route53
          certbot certonly --dns-route53 \
            -d ${CERT_DOMAIN} \
            --register-unsafely-without-email \
            --agree-tos \
            --keep-until-expiring \
            --deploy-hook '/usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf restart httpd'
      fi
